<?php //resource_metadata_1f6dd3647508b3934343578d0097be76

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['ApiPlatform\\Core\\Metadata\\Resource\\ResourceMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Metadata\\Resource\\ResourceMetadata')),
    ],
    null,
    [
        'ApiPlatform\\Core\\Metadata\\Resource\\ResourceMetadata' => [
            'shortName' => [
                'Action',
            ],
            'description' => [
                'An action.',
            ],
            'itemOperations' => [
                [
                    'get' => [
                        'method' => 'GET',
                        'stateless' => null,
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                    'patch' => [
                        'method' => 'PATCH',
                        'stateless' => null,
                        'input_formats' => [
                            'json' => [
                                'application/merge-patch+json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                    'delete' => [
                        'method' => 'DELETE',
                        'stateless' => null,
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                    'put' => [
                        'method' => 'PUT',
                        'stateless' => null,
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                    'get_one' => [
                        'method' => 'GET',
                        'path' => '/get-action/{id}',
                        'controller' => 'App\\Controller\\ActionController',
                        'read' => false,
                        'openapi_context' => [
                            'parameters' => [
                                [
                                    'name' => 'id',
                                    'in' => 'path',
                                    'description' => 'id of the action',
                                    'type' => 'string',
                                    'required' => true,
                                    'example' => '1',
                                ],
                            ],
                        ],
                        'input' => null,
                        'output' => null,
                        'stateless' => null,
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                ],
            ],
            'collectionOperations' => [
                [
                    'get' => [
                        'method' => 'GET',
                        'stateless' => null,
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                    'post' => [
                        'controller' => 'App\\Controller\\ActionController',
                        'deserialize' => false,
                        'openapi_context' => [
                            'requestBody' => [
                                'description' => 'File upload to an existing resource (superheroes)',
                                'required' => true,
                                'content' => [
                                    'multipart/form-data' => [
                                        'schema' => [
                                            'type' => 'object',
                                            'properties' => [
                                                'area' => [
                                                    'description' => 'The name of the superhero',
                                                    'type' => 'string',
                                                    'example' => '1',
                                                ],
                                                'date' => [
                                                    'description' => 'The name of the superhero',
                                                    'type' => 'string',
                                                    'example' => '2022-05-19T23:00:00.000Z',
                                                ],
                                                'description' => [
                                                    'description' => 'The slug of the superhero',
                                                    'type' => 'string',
                                                    'example' => 'superman',
                                                ],
                                                'dueDate' => [
                                                    'description' => 'Whether this superhero should be featured or not',
                                                    'type' => 'string',
                                                    'example' => '2022-05-19T23:00:00.000Z',
                                                ],
                                                'finding' => [
                                                    'description' => 'Whether this superhero should be featured or not',
                                                    'type' => 'string',
                                                    'example' => 'superman',
                                                ],
                                                'week' => [
                                                    'description' => 'Whether this superhero should be featured or not',
                                                    'type' => 'string',
                                                    'example' => 'superman',
                                                ],
                                                'photoBefore' => [
                                                    'type' => 'string',
                                                    'format' => 'binary',
                                                    'description' => 'Upload a cover image of the superhero',
                                                ],
                                            ],
                                        ],
                                    ],
                                ],
                            ],
                        ],
                        'input' => null,
                        'output' => null,
                        'method' => 'POST',
                        'stateless' => null,
                        'input_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                        'output_formats' => [
                            'json' => [
                                'application/json',
                            ],
                        ],
                    ],
                ],
            ],
            'graphql' => [
                [
                    'item_query' => [],
                    'collection_query' => [],
                    'delete' => [],
                    'update' => [],
                    'create' => [],
                ],
            ],
            'attributes' => [
                [
                    'order' => [
                        'updatedAt' => 'DESC',
                    ],
                    'formats' => [
                        'json',
                    ],
                    'normalization_context' => [
                        'groups' => [
                            'action:read',
                        ],
                    ],
                    'denormalization_context' => [
                        'groups' => [
                            'action:write',
                        ],
                    ],
                    'input' => null,
                    'output' => null,
                    'filters' => [
                        'annotated_app_entity_action_api_platform_core_bridge_doctrine_orm_filter_search_filter',
                    ],
                ],
            ],
        ],
    ],
    $o[0],
    []
); }];
